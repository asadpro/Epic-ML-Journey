[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Machine Learning Foundations: A Comprehensive Guide from Python to Mathematics",
    "section": "",
    "text": "Preface\nThis book is for those who are fully beginner and want to learn how can they become master in machine learning from no-coding experience to become proficient ML Engineer of the future. This is not just a book but a journey of a machine learning engineer and what he learn and explore throughout his journey from going python to advanced topic like deep learning algorithm and the mathematics behind it. So be patience and read it step-by-step and you will be rewarded with the knowledge that will make you from ordinary to extra-ordinary person Inshallah!.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#attention-to-details",
    "href": "index.html#attention-to-details",
    "title": "Machine Learning Foundations: A Comprehensive Guide from Python to Mathematics",
    "section": "Attention to Details",
    "text": "Attention to Details\nKey that differ a bad program from a good one is to attention to the detail of the problem. In fact, its applies to every proficient. Those who aren’t paying attention may end up with a lot of buggy code and will not be able to solve it proficiently and will always do dwelling on internet to solve only a simple problem.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#do-not-copy-paste",
    "href": "index.html#do-not-copy-paste",
    "title": "Machine Learning Foundations: A Comprehensive Guide from Python to Mathematics",
    "section": "Do Not Copy-Paste",
    "text": "Do Not Copy-Paste\nDo not copy-paste any of the coding example. Practice it by yourself and play around with it a little bit, Tweak it so that you understand how it works.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#a-note-for-smarties",
    "href": "index.html#a-note-for-smarties",
    "title": "Machine Learning Foundations: A Comprehensive Guide from Python to Mathematics",
    "section": "A Note for Smarties",
    "text": "A Note for Smarties\nIf any of the reader think that i am insulting him then don’t read this book because its for those who is beginner and want to start their career in machine learning or Artificial Inteligence. If you know everything then perhaps you should learn Lisp, which stands for (List Processing) programming language. I hear people who know everything really like Lisp.\n\n\n\n\n\n\nNote\n\n\n\n\n\nEngaging in real-world problem-solving and delving into research requires a significant time commitment.\n\n\n\n\nLet’s start from here…",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "setup.html",
    "href": "setup.html",
    "title": "Windows OS Setup",
    "section": "",
    "text": "Install python from the following link or watch any youtube video on it to install it as it requires only vscode (editor) and python language installation: Certainly, Asad_Pro_3.1. Here’s a paraphrased version of the instructions:\n\nVisit Notepad++, download the Notepad++ text editor, and install it without requiring administrator privileges.\nEnsure easy access to Notepad++ by placing shortcuts on your desktop and/or in Quick Launch during the installation.\nLaunch PowerShell from the Start menu by searching for it and pressing Enter.\nCreate shortcuts for PowerShell on your desktop and/or Quick Launch for convenience.\nOpen your Terminal program, and if Python is not recognized, install it from Python.\nConsider using ActiveState Python if administrative rights are an issue. If Python isn’t recognized after installation, set the environment variable in PowerShell and restart it.\n\n\n\nIf you run python and it’s not there (python is not recognized.), install it from http://python.org/download.\nMake sure you install Python 2, not Python 3.\nYou may be better off with ActiveState Python, especially if you do not have administrative rights.\nIf after you install it python still isn’t recognized, then in PowerShell enter this: [Environment]::SetEnvironmentVariable(“Path”, “$env:Path;C:”, “User”)\nClose PowerShell and then start it again to make sure Python now runs. If it doesn’t, restart may be required.\n\n\n\nType quit() in Python to exit.\nReturn to the previous prompt in the Terminal and troubleshoot if necessary.\nLearn how to create a directory in the Terminal.\nFamiliarize yourself with changing directories in the Terminal.\nUtilize your text editor to create a file in the directory, then save it.\nSwitch back to the Terminal using keyboard shortcuts.\nIn the Terminal, check if you can list the directory to confirm the creation of your new file.",
    "crumbs": [
      "Windows OS Setup"
    ]
  },
  {
    "objectID": "python part 1.html",
    "href": "python part 1.html",
    "title": "2  Introduction to Python",
    "section": "",
    "text": "2.1 Python Basics:\nOpen search bar and open one of the following:\nRun your python script in directory where you have store your .py python file just open cmd there and run the command: python filename.py",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction to Python</span>"
    ]
  },
  {
    "objectID": "python part 1.html#python-basics",
    "href": "python part 1.html#python-basics",
    "title": "2  Introduction to Python",
    "section": "",
    "text": "Command Prompt (cmd) for short.\nPowerShell\nIDLE Python shell\nOpen your favourite Editor and write the following code into it and then save it as hello.py (python programs can be run only if its in .py extension)\n\n\n\n1print(\"Yay! i am writing my first program\")\n2print('i am printing')\n3('' , \"\")\n\n1\n\nprint is called a function which will be explain in the letter chapters. so don’t stuck on these programming lingo for now.\n\n2\n\nAs you can see between those yellow brackets, text can be enclosed in both single and double quote.\n\n3\n\nThese quotes tells the python that we are writing string and strings are like plain text to python, its that simple.\n\n\n\n\n\n\n\n\nTip\n\n\n\nAlso run your code in python Visual Compiler which explain and run your code step by step to show you what happens under the hood. Here’s the link: Python Visual Compiler\n\n\n\n2.1.1 Comments in python\nComments are used to tell what the specific part of your program do and its like an instruction box for your line of code. It can also be used to disable your code. so this it won’t run.\n\n1print('printing nothing') #single line comment\n\n2'''Multiline comments'''\n\n1\n\nThis is single line of comment. Here with pound character i can write anything just to explain this piece of code not to execute it\n\n2\n\nYou can also use multiline comments with the help of 3 single quotes which is used to write multiple line without specifying any # hash or pound character everytime you start new line of text.\n\n\n\n\n2.1.2 Numbers & Math in python\n\nMost Commonly use Mathematics symbols\n\n\nSymbols\nNames\n\n\n\n\n+\nPlus\n\n\n-\nMinus\n\n\n/\nSlash\n\n\n*\nAsterisk\n\n\n%\nPercent\n\n\n&lt;\nLess-than\n\n\n&gt;\nGreater-than\n\n\n&lt;=\nLess-than-equal\n\n\n&gt;=\nGreater-than-equal\n\n\n\n\n\n2.1.3 Variable & Names\nFirst let’s understand Variable in simple terms:\nImagine you have a box, and you give it a name, like number_box Now, you can put a number in it, let’s say 5. So, number_box holds the value 5.\nnumber_box = 5\nHere number_box is the variable and that number 5 is the value in it. You can also change it like below\nnumber_box = 10\nprint(number_box) # Output: 10\nNow it contain 10 instead of 5. Variables are useful and it lets you store and keep tracks of your numbers text and number of other things you will see in the advanced sections.\nQuiz time:\n\nQuestion 1: Write a Python code snippet to print the phrase “Hello, Python!”\n\n\nQuestion 2: How can you print the result of multiplying two numbers, let’s say 4 and 7, in Python?\n\n\nQuestion 3: Explain what the end parameter in the print function is used for.\n\n\nQuestion 4: Write a Python code snippet to print your name on one line and your age on the next line.\n\n\nQuestion 5: If you want to print the following text on separate lines:\n\nProgramming\nis\nfun!\nHow would you achieve this using the print function?\n\n\n\n\n\n\nClick to see answers…\n\n\n\n\n\n\nprint(\"Hello, Python!\")\nprint(4 * 7)\nThe end parameter in the print function is used to specify the character that separates multiple printed items. By default, it is set to \\n, which means a newline character. Newline is like when we reach the end of a line we press enter that’s exactly what do, just to press enter at the end of a line.\nprint(\"Your Name\")\nprint(\"Your Age\")\nprint(\"Programming\")\nprint(\"is\")\nprint(\"fun!\")\n\n\n\n\nString formating\nWe can also format our string output in different ways, First i will write code and then from the following you can see its explanation below:\n\nmy_name = 'Asad Pro Beta' # My digital persona \naddress = 'Peshawar, Pakistan'\nmy_age = 35 # Just kidding\nmy_height = 74 # inches\n\n1print(my_name+' ',address)\n2print(my_name+3*'.')\n3print('Your name is: {} my age: {}'.format(my_name,my_age))\n4print('Your age is: {1} my name: {0}'.format(my_name, my_age))\n5print(f'Your name is: {my_name} my age: {my_age}')\n6print(r'Your name is: {my_name} my age: {my_age}')\n\n1\n\nThis + sign merges (concatenate) two strings together and that white space is separate them\n\n2\n\nFirst multiply dot with 3 which become (…) & then concatenate (merge) it with that string (my_name)\n\n3\n\nThe format function in Python is like a template for creating sentences where you want to replace certain parts with specific values. Let me explain with an analogy: Imagine you have a fill-in-the-blank storybook. The storybook has sentences with blanks, and you have stickers with words on them. Each sticker has a different word that fits into one of the blanks.\n\n4\n\nWe can also use index number, Index are like address of every variable where it stored on computer memory.\n\n5\n\nPutting f in the beginning act as a format function with which it identify variables.\n\n6\n\nPutting r in the beginning means that this string is raw which means nothing in other words, print everything as it is.\n\n\n\n1A,B,C,D,E = [i for i in range(ord('A'),ord('E')+1)]\na,b,c,d,e = [i for i in range(ord('a'),ord('e')+1)]\n\n\n2print(A,B,C,D,E,\n      a,b,c,d,e)\n\n3A,B,C,D,E = [65, 66, 67, 68, 69]\n\ndays = \"Mon Tue Wed Thu Fri Sat Sun\"\n4months = \"Jan\\nFeb\\nMar\\nApr\\nMay\\nJun\\nJul\\nAug\"\n\nprint(days)\nprint(months) \n\n1\n\nThis is another way to assign list of values to multiple variable at once. (Don’t bother we will cover Lists in later chapters)\n\n2\n\nRemove that comma after ‘E’ and see what happens\n\n3\n\nIts the same as the first one above, I have just created the list dynamically in the first place.\n\n4\n\nHere you will see that \\n character will act as an enter and printing will start from the new line. Copy and paste it in your editor and see its result on your own.\n\n\n\n\n\n\n\n\nClick to explore print function throughly\n\n\n\nMore on print\n\n\n\n\n2.1.4 Escape Sequences\nImagine you’re writing a story on the computer, and you want to do some special things with your words. Escape sequences in Python are like magic codes you can use to make your words look different or do special tricks!\nLook at the following table and try them out on your own:\n\n\n\n\n\n\n\nEscape\nWhat it does\n\n\n\n\n\\\\\nBackslash ()\n\n\n\\'\nSingle-quote (’)\n\n\n\\\"\nDouble-quote (“)\n\n\n\\a\nASCII bell (BEL)\n\n\n\\b\nASCII backspace (BS)\n\n\n\\f\nASCII formfeed (FF)\n\n\n\\n\nASCII linefeed (LF)\n\n\n\\N{name}\nCharacter named name in the Unicode database\n\n\n\\r\nASCII carriage return (CR)\n\n\n\\t\nASCII horizontal tab (TAB)\n\n\n\\uxxxx\nCharacter with 16-bit hex value xxxx (Unicode only)\n\n\n\\Uxxxxxxxx\nCharacter with 32-bit hex value xxxxxxxx (Unicode only)\n\n\n\\v\nASCII vertical tab (VT)\n\n\n\\ooo\nCharacter with octal value oo\n\n\n\\xhh\nCharacter with hex value hh\n\n\n\nPrompting People or Asking for Input\nprint('How old are you?') \nage =  input()\nprint(f'Your age : {age}')\ninput() is a method which shows you an empty placeholder for you to insert any value & when you insert then press enter so that value can be store in age variable.\n\nInput() function is like an empty page; someone gives you and you write anything what comes to your mind.\n\n\nHere, we have used the same string formating as we use earlier.\n\n\n\n2.1.5 Python modules\nLet’s see the code first…\n1import os\n2current_path = os.getcwd()\nprint(current_path)\n\n1\n\nos is a built-in module of python which is used to do local operating system level operation like directory change, path of the folder and navigating through directories etc.\n\n2\n\nThis code just copy your path where you are running your file. Don’t confuse yourself with that os.getcwd() for now you will soon understand this.\n\n\n\n\n\n\n\n\nModule in simple terms\n\n\n\nThink of these module OS this way. If python is an electrician then modules are its tool sets with every tool has their specific purpose like (pliers, voltage tester, wire stripper, multimeter etc) or you can say these modules are the features of python.\n\n\nAsking Prompt and Passing Argument\nfrom sys import argv\nscript_name, username = argv\nprint(f'Script name: {script_name}')\nprint(f'Username: {username}')\n\n'''\nInput:   python delete.py asad\nOutput:  Script name: delete.py\n         Username: asad\n'''\n\nThis is the other way to import module(feature) which says import from the module sys the argv method (which is a small part of that module)\nFirst open the terminal and navigate two your file where it is stored then run python delete.py asad here delete.py is my python file name write what’s yours and asad is the argument like an extra input to catch it inside our program.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction to Python</span>"
    ]
  },
  {
    "objectID": "index.html#about-the-author",
    "href": "index.html#about-the-author",
    "title": "Machine Learning Foundations: A Comprehensive Guide from Python to Mathematics",
    "section": "About the Author",
    "text": "About the Author\nSaeed Ullah is a dynamic individual with a passion for technology, science, and the intricate dance between code and creativity. Hailing from Pakistan, Saeed Ullah is a dedicated computer science student, avid gardener, and aspiring robotic engineer. His insatiable curiosity extends beyond the realms of his formal studies, as he continuously seeks to broaden his knowledge across various disciplines.\nWith a background in electrical engineering and a focus on mastering machine learning, mathematics, and computer programming, Saeed Ullah is on an epic journey through the landscapes of emerging technologies. He finds joy in the fusion of theoretical concepts and hands-on application, always eager to contribute to the cutting edge of science and technology.\nBeyond the world of algorithms and circuits, Saeed Ullah is a green-thumbed enthusiast, nurturing a garden that reflects both patience and growth—a metaphor that echoes his approach to life and learning.\nIn this book, Saeed Ullah shares not only technical insights but also the spirit of exploration and the pursuit of excellence. Through the lens of his experiences and expertise, readers are invited to join him on a journey where technology meets creativity, and the possibilities are as vast as the ever-expanding universe of knowledge.\n\nLet’s start from here…",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "python basics.html",
    "href": "python basics.html",
    "title": "1  Introduction to Python",
    "section": "",
    "text": "1.1 Python Basics:\nOpen search bar and open one of the following:\nRun your python script in directory where you have store your .py python file just open cmd there and run the command: python filename.py",
    "crumbs": [
      "Python Programming Basics",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to Python</span>"
    ]
  },
  {
    "objectID": "python basics.html#python-basics",
    "href": "python basics.html#python-basics",
    "title": "1  Introduction to Python",
    "section": "",
    "text": "Command Prompt (cmd) for short.\nPowerShell\nIDLE Python shell\nOpen your favourite Editor and write the following code into it and then save it as hello.py (python programs can be run only if its in .py extension)\n\n\n\n1print(\"Yay! i am writing my first program\")\n2print('i am printing')\n3('' , \"\")\n\n1\n\nprint is called a function which will be explain in the letter chapters. so don’t stuck on these programming lingo for now.\n\n2\n\nAs you can see between those yellow brackets, text can be enclosed in both single and double quote.\n\n3\n\nThese quotes tells the python that we are writing string and strings are like plain text to python, its that simple.\n\n\n\n\n\n\n\n\nTip\n\n\n\nAlso run your code in python Visual Compiler which explain and run your code step by step to show you what happens under the hood. Here’s the link: Python Visual Compiler\n\n\n\n1.1.1 Comments in python\nComments are used to tell what the specific part of your program do and its like an instruction box for your line of code. It can also be used to disable your code. so this it won’t run.\n\n1print('printing nothing') #single line comment\n\n2'''Multiline comments'''\n\n1\n\nThis is single line of comment. Here with pound character i can write anything just to explain this piece of code not to execute it\n\n2\n\nYou can also use multiline comments with the help of 3 single quotes which is used to write multiple line without specifying any # hash or pound character everytime you start new line of text.\n\n\n\n\n1.1.2 Numbers & Math in python\n\nMost Commonly use Mathematics symbols\n\n\nSymbols\nNames\n\n\n\n\n+\nPlus\n\n\n-\nMinus\n\n\n/\nSlash\n\n\n*\nAsterisk\n\n\n%\nPercent\n\n\n&lt;\nLess-than\n\n\n&gt;\nGreater-than\n\n\n&lt;=\nLess-than-equal\n\n\n&gt;=\nGreater-than-equal\n\n\n\n\n\n1.1.3 Variable & Names\nFirst let’s understand Variable in simple terms:\nImagine you have a box, and you give it a name, like number_box Now, you can put a number in it, let’s say 5. So, number_box holds the value 5.\nnumber_box = 5\nHere number_box is the variable and that number 5 is the value in it. You can also change it like below\nnumber_box = 10\nprint(number_box) # Output: 10\nNow it contain 10 instead of 5. Variables are useful and it lets you store and keep tracks of your numbers text and number of other things you will see in the advanced sections.\nQuiz time:\n\nQuestion 1: Write a Python code snippet to print the phrase “Hello, Python!”\n\n\nQuestion 2: How can you print the result of multiplying two numbers, let’s say 4 and 7, in Python?\n\n\nQuestion 3: Explain what the end parameter in the print function is used for.\n\n\nQuestion 4: Write a Python code snippet to print your name on one line and your age on the next line.\n\n\nQuestion 5: If you want to print the following text on separate lines:\n\nProgramming\nis\nfun!\nHow would you achieve this using the print function?\n\n\n\n\n\n\nClick to see answers…\n\n\n\n\n\n\nprint(\"Hello, Python!\")\nprint(4 * 7)\nThe end parameter in the print function is used to specify the character that separates multiple printed items. By default, it is set to \\n, which means a newline character. Newline is like when we reach the end of a line we press enter that’s exactly what do, just to press enter at the end of a line.\nprint(\"Your Name\")\nprint(\"Your Age\")\nprint(\"Programming\")\nprint(\"is\")\nprint(\"fun!\")\n\n\n\n\nString formating\nWe can also format our string output in different ways, First i will write code and then from the following you can see its explanation below:\n\nmy_name = 'Asad Pro Beta' # My digital persona \naddress = 'Peshawar, Pakistan'\nmy_age = 35 # Just kidding\nmy_height = 74 # inches\n\n1print(my_name+' ',address)\n2print(my_name+3*'.')\n3print('Your name is: {} my age: {}'.format(my_name,my_age))\n4print('Your age is: {1} my name: {0}'.format(my_name, my_age))\n5print(f'Your name is: {my_name} my age: {my_age}')\n6print(r'Your name is: {my_name} my age: {my_age}')\n\n1\n\nThis + sign merges (concatenate) two strings together and that white space is separate them\n\n2\n\nFirst multiply dot with 3 which become (…) & then concatenate (merge) it with that string (my_name)\n\n3\n\nThe format function in Python is like a template for creating sentences where you want to replace certain parts with specific values. Let me explain with an analogy: Imagine you have a fill-in-the-blank storybook. The storybook has sentences with blanks, and you have stickers with words on them. Each sticker has a different word that fits into one of the blanks.\n\n4\n\nWe can also use index number, Index are like address of every variable where it stored on computer memory.\n\n5\n\nPutting f in the beginning act as a format function with which it identify variables.\n\n6\n\nPutting r in the beginning means that this string is raw which means nothing in other words, print everything as it is.\n\n\n\n1A,B,C,D,E = [i for i in range(ord('A'),ord('E')+1)]\na,b,c,d,e = [i for i in range(ord('a'),ord('e')+1)]\n\n\n2print(A,B,C,D,E,\n      a,b,c,d,e)\n\n3A,B,C,D,E = [65, 66, 67, 68, 69]\n\ndays = \"Mon Tue Wed Thu Fri Sat Sun\"\n4months = \"Jan\\nFeb\\nMar\\nApr\\nMay\\nJun\\nJul\\nAug\"\n\nprint(days)\nprint(months) \n\n1\n\nThis is another way to assign list of values to multiple variable at once. (Don’t bother we will cover Lists in later chapters)\n\n2\n\nRemove that comma after ‘E’ and see what happens\n\n3\n\nIts the same as the first one above, I have just created the list dynamically in the first place.\n\n4\n\nHere you will see that \\n character will act as an enter and printing will start from the new line. Copy and paste it in your editor and see its result on your own.\n\n\n\n\n\n\n\n\nClick to explore print function throughly\n\n\n\nMore on print\n\n\n\n\n1.1.4 Escape Sequences\nImagine you’re writing a story on the computer, and you want to do some special things with your words. Escape sequences in Python are like magic codes you can use to make your words look different or do special tricks!\nLook at the following table and try them out on your own:\n\n\n\n\n\n\n\nEscape\nWhat it does\n\n\n\n\n\\\\\nBackslash ()\n\n\n\\'\nSingle-quote (’)\n\n\n\\\"\nDouble-quote (“)\n\n\n\\a\nASCII bell (BEL)\n\n\n\\b\nASCII backspace (BS)\n\n\n\\f\nASCII formfeed (FF)\n\n\n\\n\nASCII linefeed (LF)\n\n\n\\N{name}\nCharacter named name in the Unicode database\n\n\n\\r\nASCII carriage return (CR)\n\n\n\\t\nASCII horizontal tab (TAB)\n\n\n\\uxxxx\nCharacter with 16-bit hex value xxxx (Unicode only)\n\n\n\\Uxxxxxxxx\nCharacter with 32-bit hex value xxxxxxxx (Unicode only)\n\n\n\\v\nASCII vertical tab (VT)\n\n\n\\ooo\nCharacter with octal value oo\n\n\n\\xhh\nCharacter with hex value hh\n\n\n\nPrompting People or Asking for Input\nprint('How old are you?') \nage =  input()\nprint(f'Your age : {age}')\ninput() is a method which shows you an empty placeholder for you to insert any value & when you insert then press enter so that value can be store in age variable.\n\nInput() function is like an empty page; someone gives you and you write anything what comes to your mind.\n\n\nHere, we have used the same string formating as we use earlier.\n\n\n\n1.1.5 Python modules\nLet’s see the code first…\n1import os\n2current_path = os.getcwd()\nprint(current_path)\n\n1\n\nos is a built-in module of python which is used to do local operating system level operation like directory change, path of the folder and navigating through directories etc.\n\n2\n\nThis code just copy your path where you are running your file. Don’t confuse yourself with that os.getcwd() for now you will soon understand this.\n\n\n\n\n\n\n\n\nModule in simple terms\n\n\n\nThink of these module OS this way. If python is an electrician then modules are its tool sets with every tool has their specific purpose like (pliers, voltage tester, wire stripper, multimeter etc) or you can say these modules are the features of python.\n\n\nAsking Prompt and Passing Argument\nfrom sys import argv\nscript_name, username = argv\nprint(f'Script name: {script_name}')\nprint(f'Username: {username}')\n\n'''\nInput:   python delete.py asad\nOutput:  Script name: delete.py\n         Username: asad\n'''\n\nThis is the other way to import module(feature) which says import from the module sys the argv method (which is a small part of that module)\nFirst open the terminal and navigate two your file where it is stored then run python delete.py asad here delete.py is my python file name write what’s yours and asad is the argument like an extra input to catch it inside our program.",
    "crumbs": [
      "Python Programming Basics",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction to Python</span>"
    ]
  },
  {
    "objectID": "lists.html",
    "href": "lists.html",
    "title": "Machine Learning Foundations: A Comprehensive Guide from Python to Mathematics",
    "section": "",
    "text": "hello this is list",
    "crumbs": [
      "Introduction to Python",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>lists.html</span>"
    ]
  },
  {
    "objectID": "about author.html",
    "href": "about author.html",
    "title": "About the Author",
    "section": "",
    "text": "Saeed Ullah is a dynamic individual with a passion for technology, science, and the intricate dance between code and creativity. Hailing from Pakistan, Saeed Ullah is a dedicated computer science student, avid gardener, and aspiring robotic engineer. His insatiable curiosity extends beyond the realms of his formal studies, as he continuously seeks to broaden his knowledge across various disciplines.\nWith a background in electrical engineering and a focus on mastering machine learning, mathematics, and computer programming, Saeed Ullah is on an epic journey through the landscapes of emerging technologies. He finds joy in the fusion of theoretical concepts and hands-on application, always eager to contribute to the cutting edge of science and technology.\n\n\nBeyond the world of algorithms and circuits, Saeed Ullah is a green-thumbed enthusiast, nurturing a garden that reflects both patience and growth—a metaphor that echoes his approach to life and learning.\nIn this book, Saeed Ullah shares not only technical insights but also the spirit of exploration and the pursuit of excellence. Through the lens of his experiences and expertise, readers are invited to join him on a journey where technology meets creativity, and the possibilities are as vast as the ever-expanding universe of knowledge.",
    "crumbs": [
      "About the Author"
    ]
  },
  {
    "objectID": "about author.html#a-title",
    "href": "about author.html#a-title",
    "title": "About the Author",
    "section": "",
    "text": "Some text that is very long and that should take most of the column space.\n\nSome other text that should be below the first paragraph.",
    "crumbs": [
      "About the Author"
    ]
  }
]